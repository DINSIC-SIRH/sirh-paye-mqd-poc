<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="tests synchronisation Redis" resourceRoot="" soapui-version="5.0.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="WsdlSettings@cache-wsdls">true</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@max_rows">1000</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.panels.testcase.JTestRunLog$OptionsForm@errors_only">false</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="&lt;all>"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value="/opt/soapui/5.0.0/bin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="true"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="/home/workspace/stif/bouchons/test_automatiques/log"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:testSuite name="configuration (before tests)" id="6ddfa2e7-3371-451e-96e8-f3d8215b2d93" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="load configuration" searchProperties="true" id="bf7b0dc4-15f5-4327-a94c-133056b74364"><con:settings/><con:testStep type="groovy" name="configuration" id="d5f507ac-f284-435f-9348-049995bd06e5"><con:settings/><con:config><script>import groovy.sql.Sql


def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//recuperation du path du projet
projectPath = groovyUtils.projectPath

log.info("START CONFIGURATION ")
log.info("////////// ")

//path du file properties par défaut
def utilisateur = testRunner.testCase.testSuite.project.getPropertyValue( "utilisateur") 
pathProperties=projectPath + "/properties/"+utilisateur+"/configuration.properties"
def plateforme = testRunner.testCase.testSuite.project.getPropertyValue( "plateforme") 


if (plateforme != null &amp;&amp; plateforme != "") {
	log.info("plateforme : "+plateforme)
	pathProperties=projectPath + "/properties//"+utilisateur+"/configuration_"+plateforme+".properties"	
	log.info("Chemin du fichier de configuration spécifié : "+pathProperties)
} else {
	log.info("plateforme : inconnue")	
	log.info("Chemin du fichier de configuration par défaut : "+pathProperties)
}




//recuperation des properties
Properties properties = new Properties()
File propertiesFile = new File("$pathProperties")
propertiesFile.withInputStream {
    properties.load(it)
}

sleep 5

//lecture et copie des définitions des proprietés de configuration vers le fichier de propriétés du projet  
def port_emission = properties.port_emission ;
if (port_emission != null) {
	log.info("ancienne valeur de la property port_emission : " +testRunner.testCase.testSuite.project.getPropertyValue( "port_emission"))
	testRunner.testCase.testSuite.project.setPropertyValue( "port_emission", properties.port_emission ) 
	log.info("nouvelle valeur de la property port_emission : " +testRunner.testCase.testSuite.project.getPropertyValue( "port_emission"))	
}
def port_reception = properties.port_reception ;
if (port_reception != null) {
	log.info("ancienne valeur de la property port_reception : " +testRunner.testCase.testSuite.project.getPropertyValue( "port_reception"))
	testRunner.testCase.testSuite.project.setPropertyValue( "port_reception", properties.port_reception ) 	
	log.info("nouvelle valeur de la property port_reception : " +testRunner.testCase.testSuite.project.getPropertyValue( "port_reception"))
}
def ip_emission = properties.ip_emission ;
if (ip_emission != null) {
	log.info("ancienne valeur de la property ip_emission : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_emission"))
	testRunner.testCase.testSuite.project.setPropertyValue( "ip_emission", properties.ip_emission ) 	
	log.info("nouvelle valeur de la property ip_emission : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_emission"))
}
def ip_reception = properties.ip_reception ;
if (ip_reception != null) {
	log.info("ancienne valeur de la property ip_reception : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_reception"))
	testRunner.testCase.testSuite.project.setPropertyValue( "ip_reception", properties.ip_reception ) 	
	log.info("nouvelle valeur de la property ip_reception : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_reception"))
}
def ip_producer = properties.ip_producer ;
if (ip_producer != null) {
	log.info("ancienne valeur de la property ip_producer : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_producer"))	
	testRunner.testCase.testSuite.project.setPropertyValue( "ip_producer", properties.ip_producer ) 	
	log.info("nouvelle valeur de la property ip_producer : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_producer"))
}
def port_producer = properties.port_producer ;
if (port_producer != null) {
	log.info("ancienne valeur de la property port_producer : " +testRunner.testCase.testSuite.project.getPropertyValue( "port_producer"))
	testRunner.testCase.testSuite.project.setPropertyValue( "port_producer", properties.port_producer ) 	
	log.info("nouvelle valeur de la property port_producer : " +testRunner.testCase.testSuite.project.getPropertyValue( "port_producer"))
}

def ip_redis = properties.ip_redis ;
if (ip_redis != null) {
	log.info("ancienne valeur de la property ip_redis : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_redis"))
	testRunner.testCase.testSuite.project.setPropertyValue( "ip_redis", properties.ip_redis ) 	
	log.info("nouvellee valeur de la property ip_redis : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_redis"))
}

def port_redis = properties.port_redis ;
if (port_redis != null) {
	log.info("ancienne valeur de la property port_redis : " +testRunner.testCase.testSuite.project.getPropertyValue( "port_redis"))
	testRunner.testCase.testSuite.project.setPropertyValue( "port_redis", properties.port_redis ) 	
	log.info("nouvelle valeur de la property port_redis : " +testRunner.testCase.testSuite.project.getPropertyValue( "port_redis"))
}


//lecture et copie des définitions des proprietés de configuration vers le fichier de propriétés du projet  
def port_administration = properties.port_admin ;
if (port_administration != null) {
	testRunner.testCase.testSuite.project.setPropertyValue( "port_admin", properties.port_admin ) 	

	//travaux en https pour le port spécifique 8443
	if (port_administration == "8443") {	
		log.info("valeur de la property port_administration : 8443 => protocol_admin affecté sur https")
		testRunner.testCase.testSuite.project.setPropertyValue( "protocol_admin", "https" ) 	
	}
}
def ip_administration = properties.ip_admin ;
if (ip_administration != null) {
	log.info("ancienne valeur de la property ip_admin : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_admin"))
	testRunner.testCase.testSuite.project.setPropertyValue( "ip_admin", properties.ip_admin ) 	
	log.info("nouvelle valeur de la property ip_admin : " +testRunner.testCase.testSuite.project.getPropertyValue( "ip_admin"))
}

def url=properties.url;
if(url!=null){
	testRunner.testCase.testSuite.project.setPropertyValue( "url", properties.url ) 	
	log.info("valeur de la property url :"+properties.url)
}

def driver=properties.driver;
if(driver!=null){
	testRunner.testCase.testSuite.project.setPropertyValue( "driver", properties.driver ) 	
	log.info("valeur de la property driver :"+properties.driver)
}
def user=properties.user;
if(user!=null){
	testRunner.testCase.testSuite.project.setPropertyValue( "user", properties.user) 	
	log.info("valeur de la property user :"+properties.user)
}
def password=properties.password;
if(password!=null){
	testRunner.testCase.testSuite.project.setPropertyValue( "password", properties.password) 	
	log.info("valeur de la property password :"+properties.password)
}
def allowMultiQueries=properties.allowMultiQueries;
if(allowMultiQueries!=null){
	testRunner.testCase.testSuite.project.setPropertyValue( "allowMultiQueries", properties.allowMultiQueries) 	
	log.info("valeur de la property allowMultiQueries :"+properties.allowMultiQueries)
}

log.info("END CONFIGURATION")
log.info("////////// ")
</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="brique elementaire" id="6b57e13b-e946-4609-90d5-19b40d6b2af4" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="insert sql" searchProperties="true" id="50fa8386-4ede-49d2-8509-ed24055443ea"><con:settings/><con:testStep type="groovy" name="insert sql" id="cfc5dd56-c596-4db4-b21f-26cee518df86"><con:settings/><con:config><script>import groovy.sql.Sql
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//*****************************************************
//    RECUPERATION DU PATH DU PROJET
//*****************************************************

projectPath = groovyUtils.projectPath

def fileName=testRunner.testCase.getPropertyValue( "fileName" );


//*****************************************************
//    CHARGEMENT DES PROPERTIES
//*****************************************************

def ip_producer= testRunner.testCase.testSuite.project.getPropertyValue( "ip_producer" )
def port_producer= testRunner.testCase.testSuite.project.getPropertyValue( "port_producer" )
def url = testRunner.testCase.testSuite.project.getPropertyValue( "url" );
//log.info(connection)
//def url = properties.url;
//log.info(url)
//def driver = properties.driver;
def driver = testRunner.testCase.testSuite.project.getPropertyValue( "driver" );
//log.info(driver)
//def user = properties.user;
def user = testRunner.testCase.testSuite.project.getPropertyValue( "user" );
//log.info(user)
def password = testRunner.testCase.testSuite.project.getPropertyValue( "password" );
//log.info(password)
//def password = properties.password;
//def allowMultiQueries = properties.allowMultiQueries;
def allowMultiQueries = testRunner.testCase.testSuite.project.getPropertyValue( "allowMultiQueries" );
//log.info(allowMultiQueries)

def props = [user: user, password: password, allowMultiQueries: allowMultiQueries] as Properties
def sql = Sql.newInstance(url, props, driver)

//*****************************************************
//    RECUPERATION CONTENU FICHIER SQL
//*****************************************************

log.info(fileName);

//recuperation du path complet du fichier (par défaut)
fullPath = projectPath + "/sql_data/"+fileName
//recuperation du path complet du fichier client s'il existe
fullPath_user = projectPath + "/sql_data_"+user+"/"+fileName

//recuperation contenu fichier
String fileContents = new File(fullPath).text

def fileContentsUser = new File(fullPath_user)
if (fileContentsUser.exists()) {
	 fileContents = fileContentsUser.text
}
	
//log.info(fileContents)
//*****************************************************
//    REMPLACEMENT DES PORTS/IP MOCKS
//*****************************************************
def fileContentsUpdate=fileContents.replace('${ip_producer}',ip_producer)
fileContentsUpdate=fileContentsUpdate.replace('${port_producer}',port_producer)

//log.info(fileContentsUpdate)
//*****************************************************
//    EXECUTION DU SQL
//*****************************************************
sql.execute(fileContentsUpdate)</script></con:config></con:testStep><con:properties><con:property><con:name>fileName</con:name><con:value>TEST-05_INS_Donnees.sql</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="insert csv" searchProperties="true" id="2a81a204-bef1-4029-a545-5be0f251c9e7"><con:settings/><con:testStep type="groovy" name="insert csv" id="8789a25f-7ba1-4d13-9d29-89177bb75efe"><con:settings/><con:config><script>import groovy.sql.Sql
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//*****************************************************
//    RECUPERATION DU PATH DU PROJET
//*****************************************************

projectPath = groovyUtils.projectPath

def fileName=testRunner.testCase.getPropertyValue( "fileName" );
def tableName = testRunner.testCase.getPropertyValue( "tableName" );
def columns = testRunner.testCase.getPropertyValue( "columns" );

//*****************************************************
//    CHARGEMENT DES PROPERTIES
//*****************************************************

def url = testRunner.testCase.testSuite.project.getPropertyValue( "url" );
//log.info(connection)
//def url = properties.url;
//log.info(url)
//def driver = properties.driver;
def driver = testRunner.testCase.testSuite.project.getPropertyValue( "driver" );
//log.info(driver)
//def user = properties.user;
def user = testRunner.testCase.testSuite.project.getPropertyValue( "user" );
//log.info(user)
def password = testRunner.testCase.testSuite.project.getPropertyValue( "password" );
//log.info(password)
//def password = properties.password;
//def allowMultiQueries = properties.allowMultiQueries;
def allowMultiQueries = testRunner.testCase.testSuite.project.getPropertyValue( "allowMultiQueries" );
//log.info(allowMultiQueries)

def props = [user: user, password: password, allowMultiQueries: allowMultiQueries] as Properties
def sql = Sql.newInstance(url, props, driver)




//*****************************************************
//    RECUPERATION CONTENU FICHIER SQL
//*****************************************************

log.info(fileName);

//recuperation du path complet du fichier (par défaut)
fullPath = projectPath + "/csv_data/"+fileName

String sqlContents ='';
new File(fullPath).eachLine { line ->

  derniereLigne = line.substring(line.length()-1, line.length())
  if (derniereLigne == ',' ) 
     line = line + 'null';
     
  line = 'INSERT INTO '+tableName+ ' (' + columns + ') VALUES ('+ line + ');\n'; 
 
  sqlContents = sqlContents + line;
}

sql.execute(sqlContents);
	</script></con:config></con:testStep><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_groupe_de_lieu</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_groupe_de_lieu</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom </con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="delete sql" searchProperties="true" id="2a92b6ff-25c2-4522-874e-e20852c0197a"><con:settings/><con:testStep type="groovy" name="delete sql" id="0f70e9b5-d026-4661-8138-606ecf8fc3c1"><con:settings/><con:config><script>import groovy.sql.Sql
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
//*****************************************************
//    RECUPERATION DU PATH DU PROJET
//*****************************************************

projectPath = groovyUtils.projectPath

def tableName = testRunner.testCase.getPropertyValue( "tableName" );


//*****************************************************
//    CHARGEMENT DES PROPERTIES
//*****************************************************

def url = testRunner.testCase.testSuite.project.getPropertyValue( "url" );
//log.info(connection)
//def url = properties.url;
//log.info(url)
//def driver = properties.driver;
def driver = testRunner.testCase.testSuite.project.getPropertyValue( "driver" );
//log.info(driver)
//def user = properties.user;
def user = testRunner.testCase.testSuite.project.getPropertyValue( "user" );
//log.info(user)
def password = testRunner.testCase.testSuite.project.getPropertyValue( "password" );
//log.info(password)
//def password = properties.password;
//def allowMultiQueries = properties.allowMultiQueries;
def allowMultiQueries = testRunner.testCase.testSuite.project.getPropertyValue( "allowMultiQueries" );
//log.info(allowMultiQueries)

def props = [user: user, password: password, allowMultiQueries: allowMultiQueries] as Properties
def sql = Sql.newInstance(url, props, driver)




//*****************************************************
//    RECUPERATION CONTENU FICHIER SQL
//*****************************************************


String sqlContents ='DELETE FROM '+ tableName +';';

sql.execute(sqlContents);
	</script></con:config></con:testStep><con:properties><con:property><con:name>tableName</con:name><con:value>reflex_groupe_de_lieu</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="test synchro redis" searchProperties="true" id="f8d695ad-8a8c-408b-b467-b76f063d54cd"><con:settings/><con:testStep type="groovy" name="test synchro redis" id="e30a408d-83aa-43eb-877d-06eee301cd8b"><con:settings/><con:config><script><![CDATA[import redis.clients.jedis.*
import java.net.URI;
import java.util.Date;

def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context)
projectPath = groovyUtils.projectPath

def fileName=testRunner.testCase.getPropertyValue( "fileName" );
fullPath = projectPath + "/tests_data/"+fileName

def theFile = new File(fullPath);
theFile.write "INFO + " + new Date() + " Demarrage du test\n"

//RECUPERATION DES PROPERTIES
//*******************************************************************************************
//*******************************************************************************************

//MAPPING Entre properties et variable
def ipRedis = testRunner.testCase.testSuite.project.getPropertyValue( "ip_redis" );
def portRedis = testRunner.testCase.testSuite.project.getPropertyValue( "port_redis" );
log.info(ipRedis)
log.info(portRedis)

def duree=testRunner.testCase.getPropertyValue( "dureeMinutes" );

//*******************************************************************************************
//*******************************************************************************************

//Connexion au Tampon à distance + lancement du flush
URI uri=new URI("redis",null,ipRedis,portRedis.toInteger(),null,null,null);

Jedis jedis=new Jedis(uri);

log.info(jedis.get("REFLEX|2999"))


jedis.flushAll();

boolean bddreflex=false
boolean bddsubscriptionGMDiffuseur=false
boolean bddsubscriptionSMDiffuseur=false
boolean bddsubscriptionProducteur=false
boolean bddcodifligne=false
boolean bddarretProducteur=false
boolean bddarretDiffuseur=false
boolean bddcommunication=false
boolean bddparticipant=false
boolean bddorchestration=false
boolean bddoperator=false
boolean bddarretligne=false
boolean bddligneproducteur=false


int max = duree.toInteger() * 1000 * 60
log.info("Durée du test : " + max +" ms")
theFile << "Durée du test (ms) : " + max + "\n\n";

boolean toRun= true
def count=0
def period=1000

def errors = 0

private boolean  verifyKey(String key, boolean status, def theFile, Jedis jedis) {
   
	if (jedis.get(key)!=null && !status) {
		log.info('clé '+key+'  présente')
	     theFile << "INFO  " + new Date() + " Clé "+key+"  présente\n"
		status=true		
	}
	else if (jedis.get(key)==null && status) {
		log.info('clé '+key+' absente')
	     theFile <<  "INFO  " + new Date() +  " Clé "+key+" absente\n"	 	
		status=false	
	}
	
	return status;
}



private int  verifyError(String key, boolean status, Jedis jedis, def errors) {
   
	if (jedis.get(key)==null && status) {
		errors++
	}
	
	return errors;
}

//tant qu'on a pas les différentes clés indiquants la fin de synchronisation
while ( toRun )
{
	count++

	errors = verifyError('SYNC_BDDREFLEX', bddreflex, jedis, errors); 
	bddreflex = verifyKey('SYNC_BDDREFLEX', bddreflex, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDSUBSCRIPTION_GM_DIFFUSEUR', bddsubscriptionGMDiffuseur, jedis, errors); 
	bddsubscriptionGMDiffuseur = verifyKey('SYNC_BDDSUBSCRIPTION_GM_DIFFUSEUR', bddsubscriptionGMDiffuseur, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDSUBSCRIPTION_PRODUCTEUR', bddsubscriptionProducteur,  jedis, errors); 
	bddsubscriptionProducteur = verifyKey('SYNC_BDDSUBSCRIPTION_PRODUCTEUR', bddsubscriptionProducteur, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDSUBSCRIPTION_SM_DIFFUSEUR', bddsubscriptionSMDiffuseur,  jedis, errors); 
	bddsubscriptionSMDiffuseur = verifyKey('SYNC_BDDSUBSCRIPTION_SM_DIFFUSEUR', bddsubscriptionSMDiffuseur, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDCODIFLIGNE', bddcodifligne,  jedis, errors); 
	bddcodifligne = verifyKey('SYNC_BDDCODIFLIGNE', bddcodifligne, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDARRET_PRODUCTEUR', bddarretProducteur,  jedis, errors); 
	bddarretProducteur = verifyKey('SYNC_BDDARRET_PRODUCTEUR', bddarretProducteur, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDARRET_DIFFUSEUR', bddarretDiffuseur,  jedis, errors); 
	bddarretDiffuseur = verifyKey('SYNC_BDDARRET_DIFFUSEUR', bddarretDiffuseur, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDCOMMUNICATION', bddcommunication,  jedis, errors); 	
	bddcommunication = verifyKey('SYNC_BDDCOMMUNICATION', bddcommunication, theFile, jedis); 	
	
	errors = verifyError('SYNC_BDDPARTICIPANT', bddparticipant,  jedis, errors); 
	bddparticipant = verifyKey('SYNC_BDDPARTICIPANT', bddparticipant, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDPARAMETRE_ORCHESTRATION', bddorchestration,  jedis, errors); 
	bddorchestration = verifyKey('SYNC_BDDPARAMETRE_ORCHESTRATION', bddorchestration, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDOPERATOR', bddoperator,  jedis, errors); 
	bddoperator = verifyKey('SYNC_BDDOPERATOR', bddoperator, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDARRET_LIGNE', bddarretligne,  jedis, errors); 
	bddarretligne = verifyKey('SYNC_BDDARRET_LIGNE', bddarretligne, theFile, jedis); 
	
	errors = verifyError('SYNC_BDDLIGNE_PRODUCTEUR', bddligneproducteur,  jedis, errors); 
	bddligneproducteur = verifyKey('SYNC_BDDLIGNE_PRODUCTEUR', bddligneproducteur, theFile, jedis); 
	
	Thread.sleep(period);

	if (count*period > max) {
		theFile << "\nNoombre d'erreurs : "+errors + "\n"; 
	     theFile << "Processus terminé"
		toRun = false // eject to the while loop with fail status
	}
 }

log.info("Processus terminé");
if (errors > 0 ) {
	assert (toRun=false) : "La synchronisation s'est terminée avec des erreurs"; //toujours en echec obligatoire
}
 
]]></script></con:config></con:testStep><con:properties><con:property><con:name>fileName</con:name><con:value>synchronisation.txt</con:value></con:property><con:property><con:name>dureeMinutes</con:name><con:value>1</con:value></con:property></con:properties></con:testCase><con:properties/></con:testSuite><con:testSuite name="Tests de synchronisation redis" id="74214041-3ac0-4a47-8739-81179135a2a4"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="table_main_client" searchProperties="true" id="974a049b-8bc0-4201-88b3-4b08265cf1fb" disabled="true"><con:settings/><con:testStep type="calltestcase" name="table_main_client.sql" id="9b26cb49-b301-4529-9774-858279e55197"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>50fa8386-4ede-49d2-8509-ed24055443ea</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>Livraison_Client/postgresql/table_main_client.sql</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TEST-894" searchProperties="true" id="cdb06d41-824f-442b-b642-3f033377baf9" disabled="true"><con:description>Version 1 Le but de ce test est d'intégrer le référentiel utilisé par le client sur la plateforme Recette 2.</con:description><con:settings/><con:testStep type="calltestcase" name="load configuration"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf7b0dc4-15f5-4327-a94c-133056b74364</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="table_main_client"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>974a049b-8bc0-4201-88b3-4b08265cf1fb</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="table_arret_diffuseur_client_1.sql"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>50fa8386-4ede-49d2-8509-ed24055443ea</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>Livraison_Client/postgresql/table_arret_diffuseur_client_1.sql</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="table_arret_diffuseur_client_2.sql"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>50fa8386-4ede-49d2-8509-ed24055443ea</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>Livraison_Client/postgresql/table_arret_diffuseur_client_2.sql</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="table_arret_diffuseur_client_3.sql"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>50fa8386-4ede-49d2-8509-ed24055443ea</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>Livraison_Client/postgresql/table_arret_diffuseur_client_3.sql</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="table_arret_diffuseur_client_4.sql"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>50fa8386-4ede-49d2-8509-ed24055443ea</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>Livraison_Client/postgresql/table_arret_diffuseur_client_4.sql</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="table_arret_diffuseur_client_5.sql"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>50fa8386-4ede-49d2-8509-ed24055443ea</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>Livraison_Client/postgresql/table_arret_diffuseur_client_5.sql</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TEST-904" searchProperties="true" id="49cec34a-3d5a-4468-8e58-32e911aedf9b" disabled="true"><con:description>Version 4 Ce test permet de vérifier que le relais intègre un référentiel REFLEX présent sur le serveur SFTP dédié</con:description><con:settings/><con:testStep type="calltestcase" name="load configuration"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf7b0dc4-15f5-4327-a94c-133056b74364</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="delete ZDE"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a92b6ff-25c2-4522-874e-e20852c0197a</con:targetTestCase><con:properties><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="delete ZDL"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a92b6ff-25c2-4522-874e-e20852c0197a</con:targetTestCase><con:properties><con:property><con:name>tableName</con:name><con:value>reflex_zone_de_lieu</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="delete LDA"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a92b6ff-25c2-4522-874e-e20852c0197a</con:targetTestCase><con:properties><con:property><con:name>tableName</con:name><con:value>reflex_lieu_d_arret</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="delete GDL"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a92b6ff-25c2-4522-874e-e20852c0197a</con:targetTestCase><con:properties><con:property><con:name>tableName</con:name><con:value>reflex_groupe_de_lieu</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  GDL"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_groupe_de_lieu</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_groupe_de_lieu</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom </con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  LDA 1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_lieu_d_arret_1</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_lieu_d_arret</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_groupe_de_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  LDA 2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_lieu_d_arret_2</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_lieu_d_arret</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_groupe_de_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  LDA 3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_lieu_d_arret_3</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_lieu_d_arret</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_groupe_de_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  LDA 4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_lieu_d_arret_4</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_lieu_d_arret</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_groupe_de_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDL 1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_de_lieu_1</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_de_lieu</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_lieu_d_arret_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  ZDL 2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_de_lieu_2</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_de_lieu</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_lieu_d_arret_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  ZDL 3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_de_lieu_3</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_de_lieu</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_lieu_d_arret_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  ZDL 4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_de_lieu_4</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_de_lieu</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_lieu_d_arret_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv  ZDL 5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_de_lieu_5</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_de_lieu</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_version, nom, id_type_arret, libelle_type_arret, reflex_lieu_d_arret_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_1</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_2</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_3</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_4</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_5</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_6</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_7</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_8</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_9</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 10"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_10</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="insert csv ZDE 11"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2a81a204-bef1-4029-a545-5be0f251c9e7</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>reflex_zone_d_embarquement_11</con:value></con:property><con:property><con:name>tableName</con:name><con:value>reflex_zone_d_embarquement</con:value></con:property><con:property><con:name>columns</con:name><con:value>id, id_ref_a, id_type_arret, id_version, libelle_type_arret, nom, srs_name, x_coord, y_coord, reflex_zone_lieu_id</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TEST-905" searchProperties="true" id="051252de-d7f9-48a7-a44a-3b3aa307cfc6" disabled="true"><con:description>Version 1 Ce test permet de vérifier que le relais intègre un référentiel Codifligne présent sur le serveur SFTP dédié
</con:description><con:settings/><con:testStep type="calltestcase" name="load configuration"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>bf7b0dc4-15f5-4327-a94c-133056b74364</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="referentiel_codifligne_TEST-905.sql"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>50fa8386-4ede-49d2-8509-ed24055443ea</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>Livraison_Client/postgresql/referentiel_codifligne_TEST-905.sql</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Injection Referentiel projet ACME" searchProperties="true" id="364d196f-bc60-4be6-89fa-aa1a6629ff9a" disabled="true"><con:settings/><con:testStep type="calltestcase" name="TEST-894"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>cdb06d41-824f-442b-b642-3f033377baf9</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="TEST-904"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>49cec34a-3d5a-4468-8e58-32e911aedf9b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="TEST-905"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>051252de-d7f9-48a7-a44a-3b3aa307cfc6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test de synchronisation" searchProperties="true" id="8bba9d10-0727-463b-acb7-e9f704047659"><con:settings/><con:testStep type="calltestcase" name="Injection Referentiel"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>364d196f-bc60-4be6-89fa-aa1a6629ff9a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="Test Synchro Redis"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f8d695ad-8a8c-408b-b467-b76f063d54cd</con:targetTestCase><con:properties><con:property><con:name>fileName</con:name><con:value>synchronisation.txt</con:value></con:property><con:property><con:name>dureeMinutes</con:name><con:value>180</con:value></con:property></con:properties><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>utilisateur</con:name><con:value>issa</con:value></con:property><con:property><con:name>plateforme</con:name><con:value>ivl</con:value></con:property><con:property><con:name>ip_emission</con:name><con:value>10.222.36.235</con:value></con:property><con:property><con:name>port_emission</con:name><con:value>8080</con:value></con:property><con:property><con:name>ip_reception</con:name><con:value>10.222.36.252</con:value></con:property><con:property><con:name>port_reception</con:name><con:value>8080</con:value></con:property><con:property><con:name>ip_admin</con:name><con:value>10.222.36.233</con:value></con:property><con:property><con:name>port_admin</con:name><con:value>8443</con:value></con:property><con:property><con:name>ip_redis</con:name><con:value>10.222.37.20</con:value></con:property><con:property><con:name>port_redis</con:name><con:value>3389</con:value></con:property><con:property><con:name>ip_producer</con:name><con:value>10.222.9.228</con:value></con:property><con:property><con:name>port_producer</con:name><con:value>8080</con:value></con:property><con:property><con:name>url</con:name><con:value>jdbc:postgresql://10.222.37.0:5432/referentiel</con:value></con:property><con:property><con:name>driver</con:name><con:value>org.postgresql.Driver</con:value></con:property><con:property><con:name>user</con:name><con:value>ivt</con:value></con:property><con:property><con:name>password</con:name><con:value>ivt</con:value></con:property><con:property><con:name>allowMultiQueries</con:name><con:value>true</con:value></con:property><con:property><con:name>protocol_admin</con:name><con:value>https</con:value></con:property><con:property><con:name>modeBinaire</con:name><con:value>false</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>